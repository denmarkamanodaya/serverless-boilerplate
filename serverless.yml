service: serverless-boilerplate
frameworkVersion: "3"

custom:
  common: ${file(./serverless.common.yml):custom}
  serverless-layers:
    dependenciesPath: ./package.json
    layersDeploymentBucket: ${self:custom.common.artifactBucket} ###

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${env:ENV, 'dev'}
  lambdaHashingVersion: 20201221
  versionFunctions: false
  logRetentionInDays: 90
  deploymentBucket:
    name: ${env:DEPLOYMENT_BUCKET, ''} ###
    serverSideEncryption: aws:kms
  iam:
    deploymentRole: ${env:DEPLOYER_ROLE, ''} ### general 
    role: arn:aws:iam::153326081486:role/serverless-boilerplate-dev-lambda2-role ###
  # vpc:
  #   securityGroupIds:
  #     - ${env:SECURITY_GROUP_ID, ''}
  #   subnetIds:
  #     - ${env:SUBNET_ID_A, ''}
  #     - ${env:SUBNET_ID_B, ''}
  apiGateway:
    restApiId: ${env:API_GATEWAY_ID, ''} ### resources.yml dependent 
    restApiRootResourceId: ${env:ROOT_RESOURCE_ID, ''} ###
  timeout: 30
  environment:
    NODE_ENV: ${env:NODE_ENV, 'development'}
    AWS_SECRETS_MANAGER_NAME: ${self:custom.common.secretsManager.${self:custom.common.stage}} ###

package:
  patterns:
    - "!package-lock.json"
    - "!yarn.lock"

functions:
  - ${file(src/handlers/auth/function.yml)}
  - ${file(src/handlers/org/function.yml)}
  - ${file(src/handlers/role/function.yml)}
  - ${file(src/handlers/health/function.yml)}

plugins: ${file(yml/plugins.yml):plugins}

resources: 
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST,PUT,DELETE'"
        ResponseType: DEFAULT_4XX
        RestApiId: ${env:API_GATEWAY_ID, ''} ###
