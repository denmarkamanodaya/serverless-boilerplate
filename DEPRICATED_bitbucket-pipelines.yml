image: atlassian/pipelines-awscli:1.21.7

pipelines:
  branches:
    main:
      - parallel:
          - step:
              name: Trigger Jenkins Lambda
              script:
                - >
                  aws lambda invoke
                  --function-name jenkins-cloud-trigger
                  --payload "{ \"jobPath\": \"job/DevTeam/job/IDaaS/job/Serverless/job/DEV/job/ud-iam-service-dev\", \"repoToken\": \"$JENKINS_REPO_TOKEN\", \"params\": { \"environment\" : \"dev\" } }"
                  response.json
                - >
                  if grep -q 'errorMessage' response.json;
                  then 
                    echo "failed************" 
                    exit 1  
                  else
                    echo "success*********" 
                    exit 0
                  fi

    staging:
      - parallel:
          - step:
              name: Trigger Jenkins Lambda
              script:
                - >
                  aws lambda invoke
                  --function-name jenkins-cloud-trigger
                  --payload "{ \"jobPath\": \"job/DevTeam/job/IDaaS/job/Serverless/job/UAT/job/ud-iam-service-uat\", \"repoToken\": \"$JENKINS_REPO_TOKEN\", \"params\": { \"environment\" : \"uat\" } }"
                  response.json
                - >
                  if grep -q 'errorMessage' response.json;
                  then 
                    echo "failed************" 
                    exit 1  
                  else
                    echo "success*********" 
                    exit 0
                  fi

    prod:
      - parallel:
          - step:
              name: Trigger Jenkins Lambda
              script:
                - >
                  aws lambda invoke
                  --function-name jenkins-cloud-trigger
                  --payload "{ \"jobPath\": \"job/DevTeam/job/IDaaS/job/Serverless/job/PROD/job/ud-iam-service-prod\", \"repoToken\": \"$JENKINS_REPO_TOKEN\", \"params\": { \"environment\" : \"prod\" } }"
                  response.json
                - >
                  if grep -q 'errorMessage' response.json;
                  then 
                    echo "failed************" 
                    exit 1  
                  else
                    echo "success*********" 
                    exit 0
                  fi
