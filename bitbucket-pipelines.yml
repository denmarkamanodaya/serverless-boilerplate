image:
  name: '427532588834.dkr.ecr.ap-southeast-1.amazonaws.com/bitbucket-runner:serverless-nodejs-16'
  aws:
    oidc-role: $BITBUCKET_OIDC_CICD_ROLE

options:
  max-time: 20

definitions:
  services:
    docker:
      memory: 3072

  steps:
    - step: &Init-Test
        oidc: true
        name: Initialize and test
        caches:
          - node
        script:
          - npm install
          # - npm run test:coverage
        artifacts:
          - dist/**
          - reports/*.txt
          - coverage/lcov.info
    - step: &Sonar-Analysis
        image: atlassian/default-image:4
        oidc: true
        name: Sonar Analysis
        runs-on:
          - 'self.hosted'
          - 'linux'
        caches:
          - node
          - docker
        script:
          - . ./cd_script/set-variables.sh
          - envsubst < sonar-project.tpl.properties > sonar-project.properties
          - pipe: sonarsource/sonarqube-scan:1.2.0
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL}
              SONAR_TOKEN: ${SONAR_TOKEN}
        artifacts:
          - dist/**
          - reports/*.txt
          - coverage/lcov.info
    - step: &Sonar-Gate
        image: atlassian/default-image:4
        name: Sonar Quality Gate
        runs-on:
          - 'self.hosted'
          - 'linux'
        caches:
          - node
          - docker
        script:
          - . ./cd_script/set-variables.sh
          - envsubst < sonar-project.tpl.properties > sonar-project.properties
          - pipe: sonarsource/sonarqube-quality-gate:1.1.0
            variables:
              SONAR_TOKEN: ${SONAR_TOKEN}
        artifacts:
          - dist/**
          - reports/*.txt
          - coverage/lcov.info
    - step: &Deploy
        oidc: true
        name: Deploy NonProd
        caches:
          - node
        script:
          - . ./cd_script/set-variables.sh
          - . ./cd_script/assume_role.sh
          - serverless deploy -s $SLS_STAGE -r $SLS_REGION --aws-profile serverless-deployer
        artifacts:
          - dist/**
          - reports/*.txt
          - coverage/lcov.info

pipelines:
  branches:
    main:
      - step: *Init-Test
      # - step: *Sonar-Analysis
      # - step: *Sonar-Gate
      - step: *Deploy
    staging:
      - step: *Init-Test
      # - step: *Sonar-Analysis
      # - step: *Sonar-Gate
      - step: *Deploy
    prod:
      - step: *Init-Test
      # - step: *Sonar-Analysis
      # - step: *Sonar-Gate
      - step:
          <<: *Deploy
          name: Deploy in Production
          trigger: manual
